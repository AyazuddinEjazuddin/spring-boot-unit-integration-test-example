<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.danoff</groupId>
	<artifactId>spring-boot-unit-integration-test-example</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-boot-unit-integration-test-example</name>
	<description>Simple project for Spring Boot to show unit and integration testing</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.22.1</maven-failsafe-plugin.version>
		<kafka.testkit.version>0.7</kafka.testkit.version>
		<spring.boot.jersey.version>2.0.4.RELEASE</spring.boot.jersey.version>
		<jersey.guava.version>2.6</jersey.guava.version>
		<swagger.version>2.9.2</swagger.version>
		<avro.version>1.8.2</avro.version>
		<confluent.version>4.1.1</confluent.version>
		<cucumber.version>3.0.2</cucumber.version>
		<aspectj.version>1.9.5</aspectj.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<!-- Tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Cucumber -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- spring-kafka -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>${spring-kafka.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<version>${spring-kafka.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- kafka-avro -->
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>${avro.version}</version>
		</dependency>

		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-avro-serializer</artifactId>
			<version>${confluent.version}</version>
		</dependency>

		<!--Kafka embedded -->
		<dependency>
			<groupId>com.datamountaineer</groupId>
			<artifactId>kafka-testkit</artifactId>
			<version>${kafka.testkit.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.bundles.repackaged</groupId>
			<artifactId>jersey-guava</artifactId>
			<version>${jersey.guava.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		
		<!--Allure Dependency--> 
	       <dependency>
		  <groupId>io.qameta.allure</groupId>
		  <artifactId>allure-testng</artifactId>
		  <version>2.13.1</version>
	       </dependency>
	       <dependency>
		   <groupId>ru.yandex.qatools.allure</groupId>
		   <artifactId>allure-testng-adaptor</artifactId>
		   <version>1.5.4</version>
	       </dependency>
		
	</dependencies>
	<repositories>
		<repository>
			<id>confluent</id>
			<url>http://packages.confluent.io/maven/</url>
		</repository>
	</repositories>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<generatedSourcesDirectory>${project.basedir}/generated/src/main/java/annotation</generatedSourcesDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/generated/src/main/java/jooq</source>
								<source>${project.basedir}/generated/src/main/java/avro</source>
								<source>${project.basedir}/generated/src/main/java/annotations</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-source-as-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<configuration>
					<user>sa</user>
					<password></password>
					<schemas>
						<schema>PUBLIC</schema>
					</schemas>
					<locations>filesystem:src/main/resources/db/migration</locations>
					<url>jdbc:h2:~/employee</url>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Test.*</include>
						<include>**/*Tests.*</include>
					</includes>
					<excludes>
						<exclude>**/*IT.*</exclude>
						<exclude>**/*Runner.*</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>**/*Runner.*</include>
						<include>**/*IT.*</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.avro
										</groupId>
										<artifactId>
											avro-maven-plugin
										</artifactId>
										<versionRange>
											[1.8.2,)
										</versionRange>
										<goals>
											<goal>schema</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>generate-sources</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<executions>
							<execution>
								<id>generate-jooq-h2</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<jdbc>
										<driver>org.h2.Driver</driver>
										<url>jdbc:h2:~/employee</url>
										<user>sa</user>
										<password></password>
									</jdbc>
									<generator>
										<database>
											<name>org.jooq.meta.h2.H2Database</name>
											<includes>.*</includes>
											<excludes></excludes>
											<inputSchema>PUBLIC</inputSchema>
										</database>
										<generate>
											<deprecated>false</deprecated>
											<instanceFields>true</instanceFields>
											<pojos>true</pojos>
											<javaTimeTypes>true</javaTimeTypes>
										</generate>
										<target>
											<packageName>com.danoff.demo.db</packageName>
											<directory>${project.basedir}/generated/src/main/java/jooq</directory>
										</target>
									</generator>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.h2database</groupId>
								<artifactId>h2</artifactId>
								<version>${h2.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					<!-- avro-maven-plugin -->
					<plugin>
						<groupId>org.apache.avro</groupId>
						<artifactId>avro-maven-plugin</artifactId>
						<version>${avro.version}</version>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>schema</goal>
								</goals>
								<configuration>
									<imports>
										<import>${project.basedir}/src/main/resources/avro/FlightPreparedEvent.avsc</import>
										<import>${project.basedir}/src/main/resources/avro/PrepareFlightCommand.avsc</import>
									</imports>
									<sourceDirectory>${project.basedir}/src/main/resources/avro/</sourceDirectory>
									<outputDirectory>${project.basedir}/generated/src/main/java/avro</outputDirectory>
									<stringType>String</stringType>
									<includes>
										<include>**/*.avsc</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
					   <groupId>org.apache.maven.plugins</groupId>
					   <artifactId>maven-surefire-plugin</artifactId>
					   <version>2.22.2</version>
					   <configuration>
					     <testFailureIgnore>false</testFailureIgnore>
					     <argLine>
					       -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
					     </argLine>
					   </configuration>
					   <dependencies>
					     <dependency>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
						<version>4.12</version>
					    </dependency>
					     <dependency>
					       <groupId>org.aspectj</groupId>
					       <artifactId>aspectjweaver</artifactId>
					       <version>${aspectj.version}</version>
					     </dependency>
					   </dependencies>
					</plugin>
					<plugin>
					   <groupId>io.qameta.allure</groupId>
					   <artifactId>allure-maven</artifactId>
					   <version>2.10.0</version>
					   <configuration>
					     <reportVersion>2.13.1</reportVersion>
					     <configuration>
					       <reportVersion>2.10.0</reportVersion>
					       <reportDirectory>allure-report/</reportDirectory>
					     </configuration>
					   </configuration>
					 </plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
